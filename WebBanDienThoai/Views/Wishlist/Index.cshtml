@model IEnumerable<WebBanDienThoai.Models.Wishlist>

@{
    ViewData["Title"] = "Danh Sách Yêu Thích";
}

<div class="container py-5">
    <h2 class="text-center mb-5">
        <i class="bi bi-heart-fill text-danger"></i> @ViewData["Title"]
    </h2>

    @if (Model.Any())
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm border-0 wishlist-card">
                        <a href="@Url.Action("Display", "Product", new { id = item.ProductId })">
                            <img src="@item.Product.ImageUrl" class="card-img-top" alt="@item.Product.Name">
                        </a>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-center">@item.Product.Name</h5>
                            <p class="card-text text-danger fw-bold text-center">
                                @item.Product.Price.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                            </p>

                            <div class="mt-auto">
                                <form class="d-grid mb-2 add-to-cart-form" data-product-id="@item.ProductId">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-success btn-sm w-100">
                                        🛒 Thêm vào Giỏ Hàng
                                    </button>
                                </form>

                                <form method="post" action="@Url.Action("RemoveFromWishlist", "Wishlist")" class="d-grid">
                                    <input type="hidden" name="productId" value="@item.ProductId" />
                                    <button type="submit" class="btn btn-outline-danger btn-sm w-100">
                                        ❌ Xóa khỏi Yêu Thích
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info text-center mt-4">
            Không có sản phẩm nào trong danh sách yêu thích của bạn.
        </div>
    }
</div>

<style>
    .card-img-top {
        height: 220px;
        object-fit: contain;
        padding: 1rem;
        transition: transform 0.3s ease;
        border-radius: 1rem 1rem 0 0;
    }

    .wishlist-card:hover .card-img-top {
        transform: scale(1.05);
    }

    .wishlist-card {
        border-radius: 16px;
        transition: box-shadow 0.3s ease;
    }

        .wishlist-card:hover {
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
        }

    .btn {
        font-weight: 500;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

    .btn-outline-danger:hover {
        background-color: #dc3545;
        color: white;
    }
</style>

@section Scripts {
    <script>
        document.querySelectorAll('.add-to-cart-form').forEach(form => {
            form.addEventListener('submit', function (e) {
                e.preventDefault();

                const productId = this.getAttribute('data-product-id');
                const token = this.querySelector('input[name="__RequestVerificationToken"]')?.value;

                fetch('/ShoppingCart/AddToCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: `productId=${productId}&quantity=1&__RequestVerificationToken=${encodeURIComponent(token)}`
                })
                .then(response => {
                    if (response.ok) {
                        alert("🎉 Sản phẩm đã được thêm vào giỏ hàng!");

                        // Gọi để lấy số lượng cập nhật
                        fetch('/ShoppingCart/GetCartItemCount')
                            .then(res => res.json())
                            .then(data => {
                                const cartBadge = document.querySelector('.cart-badge');
                                if (cartBadge) {
                                    cartBadge.textContent = data.count;
                                    cartBadge.style.display = data.count > 0 ? 'inline-block' : 'none';
                                }
                            });
                    } else {
                        alert("❌ Có lỗi khi thêm sản phẩm.");
                    }
                })
                .catch(error => {
                    alert("⚠️ Lỗi mạng: " + error.message);
                });
            });
        });
    </script>
}

